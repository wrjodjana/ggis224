tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
```{r LApts-polygons, include=TRUE}
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
```{r LApts-polygons, include=TRUE}
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
CRS.new <- st_crs(LAtracts)
LAcrimes <- st_transform(LAcrimes, CRS.new)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
glimpse(crime_in_tract)
CRS.new <- st_crs(LAtracts)
LAcrimes <- st_transform(LAcrimes, CRS.new)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
glimpse(crime_in_tract)
crime_tract_count <- as.data.frame(table(crime_in_tract$TRACTCE10))
glimpse(crime_tract_count)
names(crime_tract_count) <- c("TRACTCE10","CrimeCt")
glimpse(crime_tract_count)
LAtracts_new <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
glimpse(LAtracts_new)
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
NYcrime <- fread("NYC-data/NYPD2015_Violent.csv")
head(NYcrime)
unique(NYcrime$`OFNS_DESC`)
NYcrime.hom <- NYcrime %>%
filter(`OFNS_DESC` == "HOMICIDE-NEGLIGENT-VEHICLE" | `OFNS_DESC` == "MURDER & NON-NEGL. MANSLAUGHTER")
head(NYcrime.hom)
write.csv(NYcrime.hom, "NYcrime_hom.csv")
glimpse(NYcrime.hom[,c("Longitude","Latitude")])
str(NYcrime.hom[,c("Longitude", "Latitude")])
NYcrime.hom$Latitude <- as.numeric(NYcrime.hom$Latitude)
NYcrime.hom$Longitude <- as.numeric(NYcrime.hom$Longitude)
NYcrime.hom2 <- na.omit(NYcrime.hom[,c("CMPLNT_NUM","Longitude", "Latitude")])
str(NYcrime.hom2)
NYcrime.pts <- st_as_sf(NYcrime.hom2, coords = c("Longitude","Latitude"), crs = 4326)
plot(NYcrime.pts)
NYcrimes <- NYcrime.pts
NYtracts <- st_read("NYC-data/NYC_Shape.shp")
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.65,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
CRS.new <- st_crs(NYtracts)
NYcrimes <- st_transform(NYcrimes, CRS.new)
crime_in_tractNY <- st_join(NYcrimes, NYtracts, join = st_within)
glimpse(crime_in_tractNY)
crime_tract_countNY <- as.data.frame(table(crime_in_tractNY$tractce))
glimpse(crime_tract_countNY)
names(crime_tract_countNY) <- c("tractce","CrimeCt")
glimpse(crime_tract_countNY)
NYtracts_new <- merge(NYtracts, crime_tract_countNY, by="tractce")
glimpse(NYtracts_new)
tm_shape(NYtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="NY Homicides in 2015")
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
tm_shape(NYtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="NY Homicides in 2015")
tmap_mode("view")
tm_shape(NYtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="NY Homicides in 2015")
tmap_mode(view)
tmap_mode("view")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tmap_mode("plot")
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "top"))
NYptspolygons
tmap_mode("plot")
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
tmap_mode("plot")
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = 10,
text.size = 0.8,
position = c("left", "bottom"))
LAptspolygons
```{r visualize-output, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE}
tmap_mode("view")
tm_shape(LAtracts_new) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tmap_mode("plot")
NYptspolygons <- tm_shape(NYtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(NYcrime.pts) + tm_dots(size = 0.1, col="blue") +
## add title
tm_layout(title="New York City Points and Polygons",
title.size = 0.75,
title.position=c("left", "top"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = c(0, 5, 10),  # Explicit breaks can help clarity
length = 0.25,         # Define the relative length of the scale bar
position = c("left", "bottom"),  # Bottom left position
text.size = 0.8,
lwd = 1.5,             # Adjust line width for visibility
color.dark = "blue",   # Change dark color
color.light = "lightblue")  # Change light color
tmap_mode("plot")
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = c(0, 5, 10),
text.size = 0.8,
width = 1,             # Adjusts the width of bar segments
position = c("left", "bottom"),
lwd = 1.5,             # Adjust line width for visibility
color.dark = "blue",   # Change dark color
color.light = "lightblue")  # Change light color
LAptspolygons
tmap_mode("plot")
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = c(0, 5, 10),
text.size = 0.8,
width = 1,             # Adjusts the width of bar segments
position = c("left", "bottom"),
lwd = 1.5,             # Adjust line width for visibility
color.dark = "red",   # Change dark color
color.light = "lightred")  # Change light color
LAptspolygons
tmap_mode("plot")
## 1st layer (gets plotted first)
LAptspolygons <- tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
## 2nd layer (overlay)
tm_shape(LAcrime.pts) + tm_dots(size = 0.1, col="red") +
## add title
tm_layout(title="Los Angeles Points and Polygons",
title.size = 0.65,
title.position=c("left", "bottom"),
title.fontface = "bold") +
# add scalebar
tm_scale_bar(breaks = c(0, 5, 10),
text.size = 0.8,
width = 1,             # Adjusts the width of bar segments
position = c("left", "bottom"),
lwd = 1.5,             # Adjust line width for visibility
color.dark = "red",   # Change dark color
color.light = "lightcoral")  # Change light color
LAptspolygons
library(sf)
library(dplyr)
library(terra)
library(tmap)
setwd("~/Documents/GitHub/ggis224/assignment-4")
traffic <- st_read("traffic.csv")
boundary <- st_read("boundaries.csv")
traffic <- st_read("traffic.csv")
boundary <- st_read("boundaries.geojson")
library(sf)
library(dplyr)
library(terra)
library(tmap)
library(data.table)
# load data
traffic <- st_read("traffic.csv")
boundary <- st_read("boundaries.geojson")
head(traffic)
# load data
traffic <- st_read("traffic.csv")
boundary <- st_read("boundaries.geojson")
traffic
# load data
traffic <- fread("traffic.csv", header = T)
boundary <- st_read("boundaries.geojson")
# load data
traffic <- fread("traffic.csv", header = T)
boundary <- st_read("boundaries.geojson")
head(traffic)
# load data
traffic <- fread("traffic.csv", header = T)
boundary <- st_read("boundaries.geojson")
head(traffic)
head(boundary)
# load data
traffic <- fread("traffic.csv", header = T)
boundary <- st_read("boundaries.geojson")
head(traffic)
head(boundary)
# load data
traffic <- fread("traffic.csv", header = T)
traffic_sf <- st_as_sf(traffic, coords = c("lon", "lat"), crs = 4326)
# load data
traffic <- st_read("traffic.csv")
traffic_sf <- st_as_sf(traffic, coords = c("lon", "lat"), crs = 4326)
# load data
traffic <- st_read("traffic.csv")
traffic_sf <- st_as_sf(traffic, coords = c("lon", "lat"), crs = 4326)
# load data
traffic <- read_csv("traffic.csv")
# load libraries
library(sf)
library(dplyr)
library(terra)
library(tmap)
library(data.table)
library(tidyverse)
# load data
traffic <- read_csv("traffic.csv")
traffic_sf <- st_as_sf(traffic, coords = c("lon", "lat"), crs = 4326)
# load data
traffic <- read_csv("traffic.csv")
traffic_sf <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
boundary <- st_read("boundaries.geojson")
# load data
traffic <- read_csv("traffic.csv")
boundary <- st_read("boundaries.geojson")
# load data
traffic <- st_read("traffic.csv")
boundary <- st_read("boundaries.geojson")
# load data
traffic <- read_csv("traffic.csv")
boundary <- st_read("boundaries.geojson")
# load data
traffic <- read_csv("traffic.csv", show_col_types = FALSE)
boundary <- st_read("boundaries.geojson")
# convert traffic data spatially
traffic_sf <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
head(traffic)
head(traffic_sf)
traffic_sf
plot(traffic_sf)
# convert traffic data spatially
traffic_sf <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
head(traffic_sf)
# convert traffic data spatially
traffic_sf <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
head(as.data.frame(traffic_sf))
# test data
chitraffic <- fread("traffic.csv", header = T)
head(chitraffic)
View(chitraffic)
View(boundary)
# ensure both are the same CRS
boundary <- st_transform(boundary, st_crs(traffic_sf))
View(boundary)
# filter useless stuff
boundary <- boundary %>%
select(-area, -perimeter, -comarea_id, -comarea)
# filter useless stuff
boundary <- boundary %>%
select(-area, -perimeter, -comarea_id, -comarea)
# filter useless stuff
boundary <- boundary %>%
select(-area, -perimeter, -comarea_id, -comarea)
plot(boundary)
# convert traffic data spatially
traffic_sf <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
View(traffic_sf)
# Basic plot of traffic data on the boundary map
tm_shape(boundary) +
tm_borders() +
tm_shape(traffic_sf) +
tm_dots(size = 0.5, col = "blue") +
tm_layout(title = "Traffic Data Visualization")
# Basic plot of traffic data on the boundary map
tm_shape(boundary) +
tm_borders() +
tm_shape(traffic_sf) +
tm_dots(size = 0.5, col = "blue") +
tm_layout(title = "Traffic Data Visualization")
# Basic plot of traffic data on the boundary map
tm_shape(boundary) +
tm_borders() +
tm_shape(traffic_sf) +
tm_dots(size = 0.1, col = "blue") +
tm_layout(title = "Traffic Data Visualization")
# Basic plot of traffic data on the boundary map
tm_shape(boundary) +
tm_borders() +
tm_shape(traffic_sf) +
tm_dots(size = 0.01, col = "blue") +
tm_layout(title = "Traffic Data Visualization")
# load libraries
library(sf)
library(dplyr)
library(terra)
library(tmap)
library(data.table)
library(tidyverse)
library(leaflet)
# Basic plot of traffic data on the boundary map
# Interactive map with leaflet
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$CartoDB.Positron) %>% # Optional: for a different map style
addMarkers(data = traffic_sf,
~Longitude, ~Latitude,
popup = ~as.character(column_name)) %>% # Replace 'column_name' with the name of the column you want to show in the popup
addPolygons(data = boundary,
fillColor = ~colorQuantile("YlOrRd", area)(area),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7) %>%
setView(lng = mean(traffic_sf$Longitude), lat = mean(traffic_sf$Latitude), zoom = 10)
# Basic plot of traffic data on the boundary map
# Interactive map with leaflet
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$CartoDB.Positron) %>% # Optional: for a different map style
addMarkers(data = traffic_sf,
~Longitude, ~Latitude,
addPolygons(data = boundary,
fillColor = ~colorQuantile("YlOrRd", area)(area),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7) %>%
setView(lng = mean(traffic_sf$Longitude), lat = mean(traffic_sf$Latitude), zoom = 10)
# Basic plot of traffic data on the boundary map
tm_shape(boundary) +
tm_borders() +
tm_shape(traffic_sf) +
tm_dots(size = 0.01, col = "blue") +
tm_layout(title = "Traffic Data Visualization")
