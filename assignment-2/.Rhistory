knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic_data)
library(raster)
library(sf)
library(dplyr)
library(terra)
library(tmap)
library(data.table)
library(tidyverse)
library(sp)
library(spatstat)
library(gstat)
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic_data)
library(raster)
library(sf)
library(dplyr)
library(terra)
library(tmap)
library(data.table)
library(tidyverse)
library(sp)
library(spatstat)
library(gstat)
traffic <- fread("traffic.csv")
head(traffic)
boundary <- st_read("boundaries.geojson")
head(boundary)
traffic <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
data.table(traffic)
boundary <- st_transform(boundary, crs = 4326)
tmap_mode("view")
chitraffic <- tm_shape(boundary) + tm_borders(alpha = 0.4) +
tm_shape(traffic) + tm_dots(size = 0.01, col="black", title="average traffic") +
tm_scale_bar(position = c("left", "bottom"))
chitraffic
chivehicle <- tm_shape(boundary) + tm_borders() +
tm_shape(traffic) + tm_dots(col="Total Passing Vehicle Volume", size = 0.1 , palette="Blues", n = 6, title="Total Passing Vehicles") +
tm_scale_bar(position = c("left", "bottom"))
chivehicle
coords <- st_coordinates(traffic) # extract coordinates from sf object
bbox <- st_bbox(boundary) # define the observation window (bounding box) using the boundary data
window <- owin(xrange = bbox[c("xmin", "xmax")], yrange = bbox[c("ymin", "ymax")])
traffic.ppp <- ppp(coords[,1], coords[,2], window = window) # Create a ppp (two-dimensional point-pattern) object
kde <- density(traffic.ppp) # perform kernel density estimation
kde_raster <- raster(kde) # converting KDE back to raster form
kde_raster_masked <- mask(kde_raster, boundary) # clip the KDE in raster form to chicago boundaries
str(kde)
chikde <- tm_shape(boundary) + tm_borders() +
tm_shape(kde_raster_masked) +
tm_raster(title="Traffic Density", style="cont", palette="Blues") +
tm_scale_bar(position = c("left", "bottom"))
chikde
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic_data)
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic_data)
library(raster)
library(dplyr)
library(sf)
library(terra)
library(tmap)
library(readxl)
library(data.table)
library(spatstat)
airquality <- read_excel("air-quality-index.xlsx")
glimpse(airquality)
airquality_tracts <- st_read("tracts-aqi.geojson")
data.table(airquality_tracts)
airquality <- merge(airquality_tracts, airquality, by.x="geoid10", by.y="geoid", all.x=TRUE)
airquality <- airquality %>%
select(-c("statefp10", "commarea_n", "commarea", "notes", "countyfp10"))
data.table(airquality)
write.csv(airquality, "airquality.csv")
traffic <- fread("traffic-old.csv")
glimpse(traffic)
traffic <- st_as_sf(traffic, coords = c("Longitude", "Latitude"), crs = 4326)
data.table(traffic)
write.csv(traffic, "traffic.csv")
alternativefuel <- fread("alternativefuel.csv")
alternativefuel <- st_as_sf(alternativefuel, coords = c("Longitude", "Latitude"), crs=4326)
data.table(alternativefuel)
electric_vehicles <- alternativefuel %>%
select(`ID`, `Fuel Type Code`, `Station Name`, `Street Address`, `Location`, `geometry`) %>%
filter(`Fuel Type Code` == "ELEC") %>%
mutate(`Street Address` = ifelse(`Station Name` == "Paul Simon Chicago JCC", "3348 S Kedzie Ave", `Street Address`)) %>%
select(-c("Fuel Type Code"))
data.table(electric_vehicles)
write.csv(electric_vehicles, "electric-vehicles.csv")
boundary <- st_read("boundaries.geojson")
boundary <- st_transform(boundary, crs = 4326)
coords <- st_coordinates(traffic) # extract coordinates from sf object
bbox <- st_bbox(boundary) # define the observation window (bounding box) using the boundary data
window <- owin(xrange = bbox[c("xmin", "xmax")], yrange = bbox[c("ymin", "ymax")])
traffic.ppp <- ppp(coords[,1], coords[,2], window = window) # Create a ppp (two-dimensional point-pattern) object
kde <- density(traffic.ppp) # perform kernel density estimation
kde_raster <- raster(kde) # converting KDE back to raster form
kde_raster_masked <- mask(kde_raster, boundary) # clip the KDE in raster form to chicago boundaries
str(kde)
tmap_mode("view")
chikde <- tm_shape(boundary) + tm_borders() +
tm_shape(kde_raster_masked) +
tm_raster(title="Traffic Density", style="cont", palette="Blues") +
tm_scale_bar(position = c("left", "bottom"))
chikde
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic_data)
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic_data) +
tm_bubbles(size = "traffic_metric", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1, shape = 19) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "traffic_metric", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1, shape = 19) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "traffic_metric", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1, shape = 19) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "traffic_metric", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "traffic_metric", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "ID", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(NO2, na.rm = TRUE),
mean_PM25 = mean(PM2.5, na.rm = TRUE),
mean_O3 = mean(O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid) %>%
summarize(mean_NO2 = mean(NO2, na.rm = TRUE),
mean_PM25 = mean(PM2.5, na.rm = TRUE),
mean_O3 = mean(O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(NO2, na.rm = TRUE),
mean_PM25 = mean(PM2.5, na.rm = TRUE),
mean_O3 = mean(O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM2.5, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(NO2, na.rm = TRUE),
mean_PM25 = mean(PM2.5, na.rm = TRUE),
mean_O3 = mean(O3, na.rm = TRUE))
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "ID", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "Station Name", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
# Visualization using tmap
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "ID", col = "red", border.col = "black", alpha = 0.5) + # Adjust 'traffic_metric' to your column name
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
tmap_mode("plot")
tm <- tm_shape(traffic) +
tm_bubbles(size = "ID", col = "red", border.col = "black", alpha = 0.5) +
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
nearest_traffic_index <- st_nearest_feature(electric_vehicles, traffic)
nearest_traffic_distances <- st_distance(electric_vehicles, traffic[nearest_traffic_index, ], by_element = TRUE)
tmap_mode("view")
tm <- tm_shape(traffic) +
tm_bubbles(size = "ID", col = "red", border.col = "black", alpha = 0.5) +
tm_shape(electric_vehicles) +
tm_symbols(col = "blue", size = 0.1) +
tm_layout(title = "EV Stations and Nearest Traffic Data Points")
tm
tmap_mode("view")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3")
tmap_mode("view")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3")
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2")
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5")
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3")
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2", main.title.size = 0.8)
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5", main.title.size = 0.8)
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3", main.title.size = 0.8)
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2", main.title.size = 1)
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5", main.title.size = 1)
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3", main.title.size = 1)
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2", main.title.size = 1)
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5", main.title.size = 1)
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O~3~", main.title.size = 1)
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
tmap_mode("plot")
airquality_summary <- airquality %>%
group_by(geoid10) %>%
summarize(mean_NO2 = mean(CMAQ_NO2, na.rm = TRUE),
mean_PM25 = mean(CMAQ_PM25, na.rm = TRUE),
mean_O3 = mean(CMAQ_O3, na.rm = TRUE))
plot_NO2 <- tm_shape(airquality_summary) +
tm_polygons("mean_NO2", title = "Mean NO2") +
tm_layout(main.title = "Spatial Distribution of NO2", main.title.size = 1)
plot_PM25 <- tm_shape(airquality_summary) +
tm_polygons("mean_PM25", title = "Mean PM2.5") +
tm_layout(main.title = "Spatial Distribution of PM2.5", main.title.size = 1)
plot_O3 <- tm_shape(airquality_summary) +
tm_polygons("mean_O3", title = "Mean O3") +
tm_layout(main.title = "Spatial Distribution of O3", main.title.size = 1)
tmap_arrange(plot_NO2, plot_PM25, plot_O3)
